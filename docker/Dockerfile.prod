# Dockerfile is built using
# docker build -t local/my_app:latest docker

# Dockerfile.prod is built and pushed to local Docker hub using
# docker build -t localhost:5000/my_app:latest -f docker/Dockerfile.prod .
# docker push localhost:5000/my_app:latest

# Instead of using volumes and "caching" vendor/bundle on the local machine
# this file ADDs the volume contents and then bundle installs using the frozen config

FROM local/my_app

# cache the bundle install if there were no changes to Gemfile
ADD api/Gemfile api/Gemfile
ADD api/Gemfile.lock api/Gemfile.lock
RUN cd api && bundle install --without development test --path vendor/bundle --binstubs vendor/bundle/bin --frozen true -j4 --frozen

# cache the npm packages if there were no changes to package.json
ADD web/package.json web/package.json
RUN cd web && npm install

# cache the m2 packages if there were no changes to build.boot
ADD web/build.boot web/build.boot
ADD web/boot.properties web/boot.properties
RUN cd web && boot

# add the entire project folder to the container
ADD . /home/app
# bundle install within the container
RUN cd api && bundle install --without development test --path vendor/bundle --binstubs vendor/bundle/bin --frozen true -j4 --frozen
# install the npm packages
RUN cd web && npm install
# build the semantic css
RUN cd web/semantic && gulp build
# build the cljs
RUN cd web && boot prod-build
